Measuring a short-lived radionuclide with comparably long counting duration
---------------------------------------------------------------------------

Basic principles
^^^^^^^^^^^^^^^^

If the product :math:`\lambda t_{m}` becomes significantly larger than
0.1, or even :math:`\geq 1`, when measuring the activity of a
short-lived radionuclide, the Poisson distribution of the gross counts
is only an approximation. A feature in this case is that the gross
counts distribution is a superposition of a binomial (sample
contribution) and a Poisson distribution (background). A characteristic
of binomially distributed sample contribution counts is that the
variance of the gross counts is smaller than the gross counts itself,
i.e., it is smaller than the variance of Poisson distributed gross
counts. The binomial distribution for detected sample counts in this
context has been applied in the literature (see e.g., Mathews et al,
1979; Spyrou et al., 1981; Salma and Zempl√©n-Papp, 1992; Gilmore, G.,
2008; Semkow, 2007).

Let :math:`N` be the number of atoms existing at the begin of the
measurement. The product of the probability
:math:`\left( 1 - e^{- \lambda \cdot t_{m}} \right)` for the decay of an
atom during the duration :math:`t_{m}` and the probability
:math:`\varepsilon` of detecting this decay, constitutes one parameter
:math:`p = \varepsilon \cdot \left( 1 - e^{- \lambda \cdot t_{m}} \right)`
of the binomial distribution; :math:`N` is the other. :math:`N` relates
to the activity :math:`A` by :math:`A = \lambda \cdot N`.

The literature mainly restricted the consideration to the binomial
distribution of the sample counts contribution. However, the
distribution of the gross counts (including background also) is also
required. It can be found by folding two discrete distributions, of the
binomial and the Poisson variables X und Y:

+------------+-----------------------------------------------------------------------------------------------------------------------------+
| X:         | :math:`P_{Bi}\left( x|N,p \right) = \binom{N}{x}p^{x}(1 - p)^{N - x}`                                                       |
+------------+-----------------------------------------------------------------------------------------------------------------------------+
| Y:         | :math:`P_{Po}\left( y|R_{0},t_{m} \right) = \frac{\left( R_{0}t_{m} \right)^{y}e^{- R_{0}t_{m}}}{\Gamma(y + 1)}`            |
+------------+-----------------------------------------------------------------------------------------------------------------------------+
| Z = X + Y  | :math:`P_{BiPo}(X + Y = Z) = \sum_{k = 0}^{z}{P_{Bi}\left( X = k|N,p \right)P_{Po}\left( Y = z - k|R_{0},t_{m} \right)}`    |
+------------+-----------------------------------------------------------------------------------------------------------------------------+


With :math:`x \equiv k`, :math:`{y \equiv n}_{0m} = R_{0}t_{m}` and the
gross counts :math:`n_{g} = z = x + y = k + n_{0m}`, it follows:


.. math:: P_{BiPo}\left( n_{g}|N,p,R_{0},t_{m}, t_{b} \right) = \sum_{k = 0}^{n_{g}}{P_{Bi}\left( k|N, p \right)P_{Po}\left( n_{g} - k|R_{0},t_{m} \right)}
    :label: short-lived_eq1


.. note::

    Strictly speaking, the form of the :math:`P_{BiPo}` distribution as just
    defined is valid only for integer values of the binomial parameter
    :math:`N`. For non-integer values the binomial distribution part is not
    normalized to one. This problem can be avoided, if Eq. :eq:`short-lived_eq1` is replaced
    by a special numerical function, which is expressed by a hypergeometric
    distribution using the so-called **Kummer confluent hypergeometric
    function.** This form of distribution allows to apply also non-integer
    values of :math:`N`. Its computation is also faster than applying Eq.
    :eq:`short-lived_eq1`, especially for larger values of :math:`N`. This version of the
    :math:`P_{BiPo}` distribution is actually applied in UncertRadio.


For a value of the gross count number to be generated by **Monte Carlo
simulation** one binomial distributed value (sample contribution) and
one Poisson-distributed value (background contribution) are generated.
Both values are added to obtain the gross count number value. However,
this follows only that procedure given by Eq. :eq:`short-lived_eq1` (discrete :math:`k`
values), because the binomial-distribution random number generator can
only produce integer values, while the Poisson random numbers
(background contribution) are continuous. For a small number of gross
counts, the shape of the distribution is therefore a series of
overlapping peaks, one for each binomial integer value.

Aspects of uncertainties and evaluation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The expectation values and the variance of the number :math:`n_{g}` of
gross counts are calculated by moments of the :math:`P_{BiPo}`
probability density:


.. math:: E\left( n_{g} \right) = \sum_{j = 0}^{\infty}{(j)P_{BiPo}\left( j|N, p,R_{0},t_{m},t_{b} \right)} = Np + R_{0}t_{m} = Np + n_{0m}
   :label: short-lived_eq2


.. math:: Var\left( n_{g} \right) = \left\lbrack \sum_{j = 0}^{\infty}{\left( j^{2} \right)P_{BiPo}\left( j|N,p,R_{0},t_{m},t_{b} \right)} \right\rbrack - E^{2}\left( n_{g} \right) = \left( Np + n_{0m} \right)(1 - p) + n_{0m}p
   :label: short-lived_eq3

The corresponding values of the binomial distribution are

.. math:: E(k) = Np = k
   :label: short-lived_eq4


.. math:: {var}(k) = Np(1 - p) = k(1 - p)
   :label: short-lived_eq5

which allow to replace in equations :eq:`short-lived_eq2` and :eq:`short-lived_eq3` the product :math:`Np`
by :math:`k`.

By inserting :math:`k = n_{g} - n_{0m}`, which can be interpreted as the
number of net counts, into Eq. :eq:`short-lived_eq3`, it follows:

.. math:: Var\left( n_{g} \right) = n_{g}(1 - p) + R_{0}t_{m}p = n_{g}(1 - p) + n_{0m}p
   :label: short-lived_eq6

Two quantities being important for uncertainty propagation are the gross
and the net count rates. They must be based on directly measured
quantities:

**Gross count rate**:

.. math:: R_{g} = \frac{n_{g}}{t_{m}}
   :label: short-lived_eq7

.. math:: u^{2}\left( R_{g} \right) = \frac{1}{t_{m}^{2}}\left( u^{2}(n_{g}) \right) = \frac{1}{t_{m}^{2}}\left( n_{g}(1 - p) + n_{0m}p \right) = \frac{R_{g}}{t_{m}}(1 - p) + \frac{R_{0}}{t_{m}}p
   :label: short-lived_eq8

**Net count rate:**

.. math:: R_{n} = R_{g} - R_{0}

.. math:: u^{2}(R_{n}) = u^{2}(R_{g}) + u^{2}(R_{0}) = \frac{R_{g}}{t_{m}}(1 - p) + \frac{R_{0}}{t_{m}}p + \frac{R_{0}}{t_{0}} = \frac{R_{g}}{t_{m}}(1 - p) + R_{0}(\frac{p}{t_{m}} + \frac{1}{t_{0}})

One finds for
.. math:: binomial\overset{\rightarrow}{\ }Poisson \equiv \ p \rightarrow 0

.. math:: u^{2}\left( R_{g} \right) = \frac{R_{g}}{t_{m}};\ \ \ \ \ \ u^{2}(R_{n}) = \frac{R_{g}}{t_{m}} + \frac{R_{0}}{t_{0}}

**Relation between activity and** :math:`\mathbf{N}`

For the activity :math:`A_{0} = \lambda N` existing at :math:`t = 0` a
number :math:`k` of counts are detected during the counting duration
:math:`t_{m}`, originating from the radionuclide decay. It is obtained
as:

.. math:: k = \varepsilon\int_{0}^{t_{m}}{A_{0}e^{- \lambda t}}dt = \varepsilon\int_{0}^{t_{m}}{(\lambda N)e^{- \lambda t}}dt = N\varepsilon\left( 1 - e^{- \lambda t_{m}} \right) = Np
   :label: short-lived_eq9

It follows then from :math:`R_{s} = k/t_{m}` :

.. math:: N = \frac{R_{s}t_{m}}{p}

.. math:: \widetilde{N} = \frac{\left( \widetilde{a}/w \right)t_{m}}{p}
   :label: short-lived_eq10


An equation for :math:`A_{0}` follows from the equation for the count
rate :math:`R_{s}` (:math:`f_{3}` is a correction for the decay during
the counting duration)


.. math:: \frac{k}{t_{m}} = \frac{\varepsilon A_{0}}{t_{m}}\int_{0}^{t_{m}}e^{- \lambda t}dt = \varepsilon A_{0}\frac{\left( 1 - e^{- \lambda t_{m}} \right)}{\lambda t_{m}}
   :label: short-lived_eq11


.. math:: A_{0} = \frac{k}{t_{m}}\frac{\lambda t_{m}}{\varepsilon\left( 1 - e^{- \lambda t_{m}} \right)} = \frac{k}{t_{m}}\frac{1}{\varepsilon}\frac{1}{f_{3}}
   :label: short-lived_eq12


**Activity concentration** :math:`\mathbf{a}`\ **:**

The relation :math:`A_{0} = \lambda N` is used for deriving the activity
concentration :math:`a`:

.. math:: a = w_{0}A_{0} = w_{0}\lambda\frac{k}{p} = w_{0}\lambda\frac{n_{g} - n_{0m}}{p} = w_{0}\frac{\lambda t_{m}}{p}(\frac{n_{g}}{t_{m}} - \frac{n_{0m}}{t_{m}}) = w(R_{g} - R_{0})
   :label: short-lived_eq13

Based on this equation, the uncertainty is calculated as usual in
UncertRadio.

An example case
^^^^^^^^^^^^^^^

After Ac-228 (half-live (6,15 :math:`\pm` 0,03) h) is radiochemically
separated, it is measured during 8 h. For this measurement setup the
product :math:`\lambda_{Ac228}t_{m}` is 0.9017. As this is significantly
above 0.1, nearly 1, the Ac-228 contribution to the measured gross count
rate is considered to follow the binomial distribution. The number of
gross counts therefore follow the sum of binomial- and
Poisson-distributed contributions.

Symbols and values of input quantities:

*(taken from the UR2 project Ac228_binomial_EN.txp)*

+----------------------+-----------------------------------------------------------------------------------+
|| :math:`N`           || Number of atoms existing at the begin of measurement                             |
||                     || (:math:`A = \lambda N`)                                                          |
||                     ||                                                                                  |
+======================+===================================================================================+
|| :math:`p`           || :math:`= \varepsilon\left( 1 - e^{- \lambda t_{m}} \right)`:                     |
||                     || parameter of the binomial distribution:                                          |
||                     ||                                                                                  |
||                     || :math:`Bin\left( x|N,p \right) = \binom{N}{k}p^{k}(1 - p)^{N - k}`               |
||                     ||                                     (:math:`0 \leq k \leq N`)            (1)     |
||                     ||                                                                                  |
||                     || :math:`p =`\ 0,23764104; :math:`u(p) =` 0,004982491                              |
||                     ||                                                                                  |
||                     || Note: If the measurement of duration :math:`t_{m}`\ does not                     |
||                     || start at 0, but at :math:`t_{1}`, the parameter :math:`p` is                     |
||                     || extended to:                                                                     |
||                     || :math:`p = e^{- \lambda t_{1}}\varepsilon\left( 1 - e^{- \lambda t_{m}} \right)` |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`\varepsilon` || detection probability: 0,4 :math:`\pm` 0,0083;                                   |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`\lambda`     || decay constant of Ac-228, half-live t 6,15 h :math:`\pm` 0,03 h;                 |
||                     ||                                                                                  |
||                     || :math:`\lambda =`\ 0,1127069 h\ :sup:`-1`; :math:`u(\lambda) =`                  |
||                     || 5,497896E-04 h\ :sup:`-1`                                                        |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`t_{m}`       || duration of the Ac-228 measurement (8 h), being not small                        |
||                     || compared to the half-live                                                        |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`R_{0}`       || background count rate, measured with the duration                                |
||                     || :math:`t_{0}`\ = 20 h: 50 counts/20 h = 2.50 h\ :sup:`-1`;                       |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`n_{g}`       || number of gross counts: 50 counts within 8 h;                                    |
||                     ||                                                                                  |
+----------------------+-----------------------------------------------------------------------------------+
|| :math:`w_{g0}`      || factor converting the activity (Bq) into an activity                             |
||                     || concentration                                                                    |
+----------------------+-----------------------------------------------------------------------------------+

Results obtained by these data:

:math:`n_{0m} = R_{0}t_{m} = 20` counts

:math:`k = n_{g} - n_{0m} = 30` counts

:math:`N = k/p = 126.2408` counts

:math:`R_{s} = 30/8\ h^{- 1} = 3.75\ h^{- 1}`

:math:`u(R_{s}) = \sqrt{30 \cdot (1 - 0.23764104)}/8 = 0.5978\ h^{- 1}\ `

:math:`u(ng) = \sqrt{n_{g}(1 - p) + n_{0m}p} = \sqrt{50 \cdot (1 - 0.23764104) + 20 \cdot 0.23764104} = 6.5476`

:math:`A_{0} = 0.112707 \cdot 126.24 = 14.228` Bq

further results:

w = 3.79418826 u(w)= 7.90495202E-02 (w0=1)

a = 14.2282066 u(a)= 3.39566064

Sum(Product(Bi x Po)):

mean(BiPo)= 50.0000000 var(BiPo)= 42.8707695

expected Var: Ng*(1-p) + N0/t0*tm*p= 42.8707695

**Note**: The variance of the gross count number (42.871) is smaller
than the gross count number (50.0), i.e., smaller compared to a pure
Poisson distributed gross count number. By decreasing the detection
probability by a factor of 10 results in a 10-fold smaller value of
:math:`p`, i.e., :math:`p = 0.0237641`. Under this assumption the
binomial distribution can be approximated by a Poisson distribution.
Then, approximately the relation ‚Äúvariance of gross counts = gross
counts‚Äú would be to be expected. This is confirmed by Eq. :eq:`short-lived_eq6`, by which
the variance value results in
:math:`50 \cdot 0.97624 + 20 \cdot 0.0237641 = 49.287\ `, which is
already close to the value of 50 to be expected for the ‚ÄúPoisson plus
Poisson‚Äú case.

Implementation in UncertRadio
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The first step for invoking the specaial procedure for short half-lives
is to select under the :ref:`tab ‚Äúvalues, uncertainties‚Äù` the distribution type
‚Äú\ **Binom+Poiss**\ ‚Äú for the gross counts number symbol.

Thereafter, four further parameters are to be selected:
:math:`p,\ \ R_{0},\ t_{m}\ and\ \lambda`. This can be achieved by
invoking a dialog via the menu **Set binomial/poisson case:**

.. image:: /images/bio_poi.png
    :align: center

This dialog may also be invoked by the program itself while establishing
such an UR project.

The symbol numbers of the four parameters *p*, *R0*, *tm*, *lambda*, are
stored in the txp file, e.g., as ‚ÄúBinPoi=8 10 12 9‚Äú.