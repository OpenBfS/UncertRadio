@Titeltext:


Example from the paper by I. Lira, "Bayesian assessement of uncertainty in metrology", submitted to Metrologia (April 2009).

Later, the paper was published in: Metrologia 47 (2010) R1Â–R14, with D. Grientschnig as Co-Author: Therein, however, less result values were documented.

Here, quite small numbers of counts are considered which are Poisson distributed resulting in gamma distributed count rates by applying a Bayesian method. The activity is calculated from a net counting rate and the detection efficiency.

Equations, as used for UR:

 y0 = Rn / eps
 Rn = Rg - R0
 Rg = ng/tg
 R0 = n0/t0

For both numbers of counts, ng and n0, a gamma distribution has to be selected under the TAB "Values, Uncertainties". Then, their values and variances are - only internally! - replaced by the values (ng+0.5) and (n0+0.5). As a consequence, this leads to gamma-distributed counting rates Rg and R0, with values (ng+0.5)/tg and (n0+0.5)/t0 and variances (ng+0.5)/tg^2 and (n0+0.5)/t0^2.

The value of the constant added to the original count numbers, here 0.5, depends on the choice of the prior within the Bayesian treatment, which is (used here) 0.5 for a prior proportional to 1/SQRT(n), or, 1.0 for a prior ~ 1/n.

A purely Bayesian treatment of calculating the best estimate and the associated uncertainty (see Lira) yields values of 0.091 Bq und 0.083 Bq, respectively. These values can be confirmed by the MC simulation available under the TAB "Results".

The confidence interval was given as (0 - 0.255). The upper limit can be obtained with UR by using a value of 0.90 instead of 0.95 for the probalility gamma.

2009-04-15 und 2015-07-22
@Formeltext:
y0 = Rn / eps
Rn = Rg - R0
Rg = ng/tg
R0 = n0/t0
@Symbole-GRID:
nchs=1
nEGr=1
ngrs=9
nab=4
nmu=5
y0 #a #Bq #activity #
Rn #a #1/s #net counting rate #
Rg #a #1/s #gross counting rate #
R0 #a #1/s #background counting rate #
eps #u #1/Bq/s #detection efficiency #
ng #u # #gross counts #
tg #u #s #gross counting duration #
n0 #u # #background counts #
t0 #u #s #background counting duration #
@Menu1 und Menu2:
knetto=  2  0  0
kbrutto=  3  0  0
@Unc-Grid:
y0# -2.916666670000000E-02 #1 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #1.068812940000000E-01 #
Rn# -2.916666670000000E-03 #1 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #1.068812940000000E-02 #
Rg#1.944444440000000E-02 #1 #sqrt(Rg/tg) # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #1.039349270000000E-02 #
R0#2.236111110000000E-02 #1 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #2.492272010000000E-03 #
eps#1.000000000000000E-01 #2 # # -9.990000000000000E+02 #0.000000000000000E+00 # 1 #0.000000000000000E+00 #
ng#3.000000000000000E+00 #4 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #1.870828690000000E+00 #
tg#1.800000000000000E+02 #1 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #0.000000000000000E+00 #
n0#8.000000000000000E+01 #4 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #8.972179219999999E+00 #
t0#3.600000000000000E+03 #1 # # -9.990000000000000E+02 # -9.990000000000000E+02 # 1 #0.000000000000000E+00 #
@Covar-Grid:
@Sonstige:
kalpha=1.644854
kbeta=1.644854
coverf=1.000
coverin=1.000
1-gamma=0.9500
GamDistAdd=0.5000
ModelType=PosLin
