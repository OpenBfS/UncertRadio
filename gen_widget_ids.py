#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import xml.etree.ElementTree as ET


def extract_widget_ids(glade_file):
    """Extract widget IDs from a Glade file."""
    tree = ET.parse(glade_file)
    root = tree.getroot()

    ids = []
    for widget in root.iter('object'):
        widget_id = widget.get('id')
        if widget_id:
            ids.append(widget_id)

    return ids


def generate_fortran_include_file(widget_ids, output_file):
    """Generate a Fortran include file from widget IDs."""
    with open(output_file, 'w') as f:
        f.write("! This file is automatically generated. Do not edit.\n")
        f.write("character(len=32), parameter :: widget_ids_array(1:" +
                str(len(widget_ids)) + ") = [ & \n")

        for i, widget_id in enumerate(widget_ids):
            if i == len(widget_ids) - 1:  # Check if it's the last widget
                f.write(f"    '{widget_id.ljust(32)}' & \n")  # No comma for the last item
            else:
                f.write(f"    '{widget_id.ljust(32)}', &\n")  # Comma for other items

        f.write("]\n")


if __name__ == "__main__":
    glade_file = 'UR2_5.glade'  # Replace with your Glade file path
    output_file = 'src/UR/widgets-auto.in'   # Output Fortran include file

    widget_ids = extract_widget_ids(glade_file)
    generate_fortran_include_file(widget_ids, output_file)

    print(f"Generated Fortran include file: {output_file}")
